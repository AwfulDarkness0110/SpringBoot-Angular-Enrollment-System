#################################################################################################################
################################################ Configuration ##################################################
#################################################################################################################

####################################################################################################
############## active profile ############
spring.profiles.active                                           = dev


####################################################################################################
############## Custom configuration #############
server.port                                                      = 8080
system.tls                                                       = false
system.urls                                                      = http://localhost:${server.port}, http://127.0.0.1:${server.port}
system.current-version                                           = v1
system.web-ignore-endpoints                                      = /h2-console/**
system.public-endpoints                                          = /api/v1/auth/login
system.admin-username                                            = ENC(H9OqHxsrTfFSuCQe+8JLag6pwR2Y/zfXMK0Fdm1gD22UJuwn8Dox5yX3YzEQsz9Y)
system.admin-password                                            = ENC(txV2rp0t3yL4Hk5hkFgOGSMYLP99gamz0g0tCBUrzq4A2TVUTDxcAqPTAhAk/PC7)
system.test-password                                             = ENC(Tem8rFmRYW6IPkczHMCg/zgU6gfGrOo56+aFnux59m6sFmOo+NcROkyuZdk0gImt)
system.cookie-secure                                             = ${system.tsl}
system.cookie-same-site                                          = Strict
system.naming-strategy                                           = KEBAB_CASE


####################################################################################################
############## in-memory h2 database ##############
#spring.datasource.url                                           = jdbc:h2:mem:testdb
#spring.datasource.driverClassName                               = org.h2.Driver
#spring.datasource.username                                      = test
#spring.datasource.password                                      =
#spring.jpa.database-platform                                    = org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled                                       = true
#spring.h2.console.path                                          = /h2-console
#spring.h2.console.settings.trace                                = false
#spring.h2.console.settings.web-allow-others                     = false
spring.jpa.properties.hibernate.default_schema                   = public


####################################################################################################
############## jwt configuration ############
jwt.secret-key                                                   = ENC(Rl4LPtPTngvNvlgHkzHsOklZKjzPIl4gY0VXTAHVWGcqz5gygbiyHqfMe+tsnWpv4AC8xnNomEueLZ2W1Nsn2z0n7Aaqpk8cq7l7LHnKyiU=)
jwt.access-expiration-time                                       = 300
jwt.refresh-expiration-time                                      = 3600
jwt.token-header                                                 = Authorization
jwt.token-prefix                                                 = Bearer\u0020
jwt.token-type                                                   = JWT
jwt.token-issuer                                                 = secure-api
jwt.token-audience                                               = secure-app
jwt.access-cookie-name                                           = ACCESS-TOKEN
jwt.refresh-cookie-name                                          = REFRESH-TOKEN
jwt.refresh-cookie-url                                           = /api/v1/auth/refresh


####################################################################################################
############# redis configuration ###########
spring.redis.database                                            = 0
spring.redis.host                                                = localhost
spring.redis.port                                                = 6379
spring.redis.password                                            = ENC(BZcNQ3Y0VFcrPdrnsX8ZHB+rJ39lsBt/UUaOSq+wXEdS/3glaQKb8WeQx8PlNDVZGpPllqDt6H44FO2qwdTx1+GpcRPRpiQC6q78mpcnwxLlpkD7OLPvZaiK/whgiCJOGDZ50HQqi/LGh2wtDERTzw==)
spring.redis.timeout                                             = 60000


####################################################################################################
############ enable and configure Hibernate second-level cache using Ehcache ############
spring.jpa.properties.hibernate.cache.use_second_level_cache     = true
spring.jpa.properties.hibernate.cache.use_query_cache            = true
spring.jpa.properties.hibernate.cache.region.factory_class       = org.hibernate.cache.jcache.JCacheRegionFactory
spring.jpa.properties.hibernate.javax.cache.provider             = org.ehcache.jsr107.EhcacheCachingProvider
### Ehcache 3.x XML configuration file location
spring.jpa.properties.hibernate.javax.cache.uri                  = classpath:ehcache.xml
### required - enable selective caching mode - only entities with @Cacheable annotation will use L2 cache.
spring.jpa.properties.javax.persistence.sharedCache.mode         = ENABLE_SELECTIVE
### optional - generate statistics to check if L2/query cache is actually being used.
#spring.jpa.properties.hibernate.generate_statistics              = true


####################################################################################################
############ Hibernate batch configuration ##############
spring.jpa.properties.hibernate.jdbc.batch_size                  = 100
spring.jpa.properties.hibernate.order_inserts                    = true
spring.jpa.properties.hibernate.order_updates                    = true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data        = true


####################################################################################################
############# Hibernate configuration ###########
### auto escaping database identifiers (reserved words)
spring.jpa.properties.hibernate.globally_quoted_identifiers      = true
### additional configuration for postgresql
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true


####################################################################################################
############ JSON naming strategy #############
spring.jackson.property-naming-strategy                          = ${system.naming-strategy}


####################################################################################################
############ disable spring jpa anti-pattern setting open-in-view ############
spring.jpa.open-in-view                                          = false


####################################################################################################
############ springdoc configuration #############
#springdoc.api-docs.path                                      = /v3/api-docs
#springdoc.api-docs.enabled                                   = false
#springdoc.swagger-ui.enabled                                 = false
#springdoc.pathsToMatch                                       =/**
#springdoc.swagger-ui.displayRequestDuration                  = true
#springdoc.writer-with-default-pretty-printer                 = true
springdoc.version                                                = v1


####################################################################################################
############ logging sql scripts ############
### NOT RECOMMENDED enable standard output for SQL logging and beautify the print of SQL
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=false

### RECOMMENDED enable hibernate SQL debug logging and print out statement logs as well as prepared statement parameters
#spring.jpa.properties.hibernate.show_sql                         = true
#spring.jpa.properties.hibernate.format_sql                       = true
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder      = trace
### not necessary
#logging.level.org.hibernate.type=debug

### by default, spring will print out log in console only, use setting below to set specific log file
#logging.file.name                                            = spring.log


####################################################################################################
############ enable all debug logs in console with root level ############
#logging.level.root=debug
#logging.level.org.springframework.boot.autoconfigure=DEBUG


####################################################################################################
############ enable schema generation for printing sql scripts (both create and drop) ############
### this enable running actual database creation
#spring.jpa.properties.javax.persistence.schema-generation.database.action       = drop-and-create

### needed for generating sql scripts which disable actual database creation, but we have option above enable it again
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action        = drop-and-create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target = create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target   = drop.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source = metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-source   = metadata